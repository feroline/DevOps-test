services:
  pg-tasks:
    container_name: pg_tasks
    image: postgres:17.6
    ports:
      - 5433:5432
    environment:
      - POSTGRES_DB=tasks
      - POSTGRES_PASSWORD=123456
    networks:
      - jenkins-network
    volumes:
      - pg_data:/var/lib/postgresql/data

  jenkins-server:
    container_name: jenkins_docker
    restart: on-failure
    build: 
      context: ./jenkins-custom
    image: jenkins-with-maven
    ports:
      - 8081:8080
      - 50000:50000
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    networks:
      - jenkins-network
    volumes:
      - jenkins_data:/var/jenkins_home

  tomcat-server:
    container_name: tomcat_server
    build:
      context: .
      dockerfile: Dockerfile
    image: tomcat-server:8.5.50
    ports:
      - 8080:8080
    networks:
      - jenkins-network
    depends_on:
      - pg-tasks
    environment:
      - DATABASE_HOST=pg-tasks
      - DATABASE_PORT=5432

  sonarqube: 
    container_name: sonarqube
    image: sonarqube:25.9.0.112764-community
    ports: 
      - "9000:9000"
    networks:
      - sonarnet
      - jenkins-network
    environment:
      -  sonar.jdbc.url=jdbc:postgresql://pg-sonar:5432/sonar
    depends_on:
      - pg-sonar
    volumes:
      - sonarqube_cof:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
      - sonarqube_logs:/opt/sonarqube/logs

  pg-sonar: 
    container_name: pg-sonar
    image: postgres:17.6
    ports:
      - "5434:5432"
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql/data

networks:
  jenkins-network:
    driver: bridge
  sonarnet: 

volumes:
  jenkins_data:
  pg_data:
  sonarqube_cof:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  sonarqube_logs:
  postgresql:
  postgresql_data: 



